version: '3.8'

x-common-variables: &common-variables
  DJANGO_SETTINGS_MODULE: nemy_pos.settings.production
  PYTHONPATH: /app
  TZ: UTC

x-common-depends-on: &common-depends-on
  db:
    condition: service_healthy
  redis:
    condition: service_healthy

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: gunicorn nemy_pos.wsgi:application --bind 0.0.0.0:8000 --workers 4 --threads 4 --worker-class=gthread --worker-tmp-dir=/dev/shm --timeout 30 --keep-alive 5
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    environment:
      <<: *common-variables
    env_file: .env
    depends_on:
      <<: *common-depends-on
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - nemy_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployment/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '0.5'
          memory: 1G
    networks:
      - nemy_network

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    networks:
      - nemy_network

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A nemy_pos worker --loglevel=info --concurrency=4
    volumes:
      - .:/app
    environment:
      <<: *common-variables
    env_file: .env
    depends_on:
      <<: *common-depends-on
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
    networks:
      - nemy_network

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A nemy_pos beat --loglevel=info
    volumes:
      - .:/app
    environment:
      <<: *common-variables
    env_file: .env
    depends_on:
      - celery
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    networks:
      - nemy_network

  nginx:
    image: nginx:1.25-alpine
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./deployment/nginx:/etc/nginx/conf.d
      - ./deployment/nginx/ssl:/etc/nginx/ssl
      - ./deployment/nginx/logs:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      web:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    networks:
      - nemy_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local

networks:
  nemy_network:
    driver: bridge 